
server:
  port: 9765

spring:
  zipkin:
    base-url: http://localhost:9411/ # 链路服务地址
  sleuth:
    sampler:
      probability: 1.0 # 样本采集率
  application:
    name: consumer-server

eureka:
  client:
    security:
      basic:
        user: admin
        password: admin
    serviceUrl:
      # defaultZone: http://localhost:9761/eureka/ # 常规配置
      # defaultZone: http://localhost:9761/eureka/,http://localhost:9760/eureka/ # 在线扩容配置
      defaultZone: http://${eureka.client.security.basic.user}:${eureka.client.security.basic.password}@localhost:9761/eureka/ # Http basic配置
    registry-fetch-interval-seconds: 5 # 适当提高client拉取Server注册信息的频率，默认30秒

# 打开feign中的hystrix，默认是关闭的
feign:
  hystrix:
    enabled: true
  httpclient:
    enabled: false # 禁用默认的http
  okhttp:
    enabled: true # 启用okhttp

ribbon:
  ReadTimeout: 2000 #请求处理的超时时间
  ConnectTimeout: 2000 #请求连接的超时时间
  MaxAutoRetries: 0 #对当前实例的重试次数
  MaxAutoRetriesNextServer: 1 #切换实例的重试次数
  eager-load: #开启饥饿加载
    enabled: true
    clients: service-hi

# RandomRule随机策略
# RoundRobinRule轮询策略
service-hi:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule

# Ribbon的超时时间需要短于hystrix的超时时间

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true #是否开启超时
        isolation:
          thread:
            timeoutInMilliseconds: 3000 #设置熔断器超时时间,默认值1000

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins: "*"
        allowed-methods: "*"


logging:
  level:
    com.github.dge1992.consumer.service.*: debug
